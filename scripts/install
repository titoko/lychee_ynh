#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

# This is a multi-instance app, meaning it can be installed several times independently
# The id of the app as stated in the manifest is available as $YNH_APP_ID
# The instance number is available as $YNH_APP_INSTANCE_NUMBER (equals "1", "2", ...)
# The app instance name is available as $YNH_APP_INSTANCE_NAME
#    - the first time the app is installed, YNH_APP_INSTANCE_NAME = ynhexample
#    - the second time the app is installed, YNH_APP_INSTANCE_NAME = ynhexample__2
#    - ynhexample__{N} for the subsequent installations, with N=3,4, ...
# The app instance name is probably what you are interested the most, since this is
# guaranteed to be unique. This is a good unique identifier to define installation path,
# db names, ...
app=$YNH_APP_INSTANCE_NAME

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
password=$YNH_APP_ARG_PASSWORD
password=$(echo -n $password | md5sum | cut -d ' ' -f 1)

# Source YunoHost helpers
source /usr/share/yunohost/helpers

# Remove trailing slash
[ "$path" != "/" ] && path=${path%/}

# Check domain/path availability
sudo yunohost app checkurl "${domain}${path}" -a "$app" \
    || ynh_die "Path not available: ${domain}${path}"

# Check the admin exists in YunoHost users
ynh_user_exists $admin

# Save app settings
ynh_app_setting_set "$app" admin "$admin"

# Create path for copying
src_path=/var/www/$app
sudo mkdir -p $src_path


#db
db_pwd=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d '[A-Za-z0-9]' | sed -n 's/\(.\{24\}\).*/\1/p')
db_user=$app

# Initialize database and store mysql password for upgrade
sudo yunohost app initdb $db_user -p $db_pwd -s $(readlink -e ../conf/db.sql) 
ynh_app_setting_set "$app" mysqlpwd $db_pwd

# Create path for copying
src_path=/var/www/$app
sudo mkdir -p $src_path

# Copy files to the right place
sudo cp -r ../source/* $src_path

# Create path for data
data_path=/home/yunohost.app/$app/
sudo mkdir -p $data_path
sudo mv $src_path/uploads/* $data_path
sudo rmdir $src_path/uploads/
sudo ln -s $data_path $src_path/uploads

# Copy config files
sudo cp ../conf/php-fpm.conf /etc/php5/fpm/pool.d/$app.conf
sudo cp ../conf/php-fpm.ini /etc/php5/fpm/conf.d/20-$app.ini
sudo cp ../conf/config.php $src_path/data/

# Set permissions
sudo chown -R root: $src_path
sudo chown -R www-data: $src_path/{data,plugins}
sudo chown -R www-data: $data_path/
sudo find $src_path -type f -exec chmod 644 {} +
sudo find $src_path -type d -exec chmod 755 {} +
sudo find $data_path -type d -exec chmod 777 {} +
sudo chmod 777 $src_path/data

# Configure nginx settings
folder_path=${path%/}
sudo sed -i "s@YNH_EXAMPLE_PATH@$path@g" ../conf/nginx.conf
# If path is only / (without subfolder), add trailing slash to alias
alias_path=$src_path
nginx_conf="../conf/nginx.conf"
[ "$path" == '/' ] && alias_path=$alias_path'/'
sudo sed -i "s@YNH_EXAMPLE_ALIAS@$alias_path@g" $nginx_conf
sudo sed -i "s@YNH_EXAMPLE_FOLDER@$folder_path@g" $nginx_conf
sudo cp $nginx_conf /etc/nginx/conf.d/$domain.d/$app.conf

# Configure db settings
sudo sed -i "s@NAMETOCHANGE@$app@g" /etc/php5/fpm/pool.d/$app.conf
sudo sed -i "s@NAMETOCHANGE@$app@g" $src_path/data/config.php
sudo sed -i "s@PWDTOCHANGE@$db_pwd@g" $src_path/data/config.php
sudo sed -i "s@login@$admin@g" ../conf/postini.sql
sudo sed -i "s@pwd@$password@g" ../conf/postini.sql
sudo mysql -u$db_user -p$db_pwd -D $db_user < ../conf/postini.sql

# Reload Nginx and regenerate SSOwat conf
sudo service php5-fpm restart
sudo service nginx reload
ynh_app_setting_set "$app" skipped_uris "/"
sudo yunohost app ssowatconf
